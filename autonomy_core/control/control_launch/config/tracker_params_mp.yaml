# This should contain tracker parameters

take_off_tracker:
  thrust_rate: 6.0 # default 5.0. If the robot cannot take off after reaching max_thrust, try increasing this (with caution if you're running real-robot experiments)
  max_thrust: 5.0 # default 4.0. If the robot cannot take off after reaching max_thrust, try increasing this (with caution if you're running real-robot experiments)
  min_thurst: -9.8
  epsilon: 0.01

land_tracker:
  epsilon: 2.0 # landing process stops when the position command is epsilon below odom
  vel: 0.5 # landing velocity, will hit ground with this velocity
  acc: 2.0 # landing acceleration 

trajectory_tracker:
  max_pos_error: 1.00 # maximum allowed trajectory tracking error in meters (recommended value: 0.5-1.0)
  align_yaw: false # default false
  yaw_speed_magnitude: 0.5 # in rad/s the yaw alignment rate (recommended value: 0.3-1.0)
  use_lambda: true # pose error checking

trajectory_planner:
  debug: false # debug mode, default false
  verbose: true # verbose mode, default false
  max_v: 3.0 # x-y-direction maximum velocity,recommended value: for 2-D 9, for 3-D 3
  max_a: 2.0 # x-y-direction maximum acceleration, recommended value: for 2-D 7, for 3-D 2
  max_j: 2.0 # x-y-direction maximum jerk, recommended value: for 2-D 3, for 3-D 2
  max_u: 2.0 # x-y-direction control inputs increase / decrease step, must be smaller than max_j, recommended value: for 2-D 3, for 3-D 1, for each axis jerk increment choice is -max_u, 0, max_u
  use_3d_local: true # local planner operates in 3D (true) or 2D (false)
  search_planner_text: ["MPL", "dispersion planner", "JPS (geometric)", "pass through from global planner", "RRT", "SST"]
  search_planner_type: 2 # 0: MPL, 1: dispersion planner, 2: JPS (geometric) 3: pass through from global planner 4: RRT 5 :SST
  #is being overwriten in the launch file
  opt_planner_text: ["Double Description", "gcopter", "iLQR(Altro)", "None"] #this trick make when no opt planner, the text says none
  opt_planner_type: 2 # -1: no planner(BROKEN) 0: Double Description 1: gcopter 2: iLQR(Altro) 
  use_discrete_traj: false # set true to use with ilqr, still a lot of tracking er
  use_tracker_client: true # if we wait for tracker to finish before sending next command
  # if we do not care about tracking error and want things to run fast, set this to false
  path_sampling_dt : 0.05  # should be same as search/time_res

  #TODO(Laura) fix path
  dispersion/graph_file: "/home/yifei/Documents/optimal_ctrl/500.json" #/home/wyw/Code/yifei_ws/src/500.json" # /home/wyw/Code/yifei_ws    /home/yifei/Documents/optimal_ctrl/
  
  use_3d_global: false # global planner operates in 3D (true, in this case use_3d_local has to be set as true) or 2D (false)
  z_cost_factor: 1 # global map z cost factor, this also influences the vertical semi field of view of global planner into 45-degree / z_cost_factor  (cost_along_z = z_cost_factor * cost_along_x_or_y)
  # TODO: Z factor not working, has a bug, set value to 1 always!

  max_v_z: 1.5 # z-direction maximum velocity, recommended value: 1.5
  max_a_z: 2.0 # z-direction maximum acceleration, recommended value: 3.0
  max_j_z: 2.0 # z-direction maximum jerk, recommended value: 3.0
  max_u_z: 1.0 # z-direction control inputs increase / decrease step, must be smaller than max_j, recommended value: 3.0
  
  tol_pos: 1.0 # tolerance of distance for goal region, 0 means no tolerance, -1 means no limitation, recommended value: 3.0 for 2-D and 5.0 for 3-D
  global_goal_tol_vel: 3.0 # tolerance of velocity for goal region, recommended value: 2.0 for 2-D and 3.0 for 3-D
  #not used if check_vel is false
  global_goal_tol_acc: -1 # tolerance of acceleration for goal region, recommended value: -1
  #not used if check_vel is false
  dt: 1.0 # execution time for each primitive, recommended value: 1.0
  ndt: 1.0 # default 1 #not used it seems? (Yifei)
  max_num: 20000 # maxmum number of expansion, -1 means no limitation #Yifei: Hopefully 20 mean 20s here
  heuristic_weight: 300.0 # the larger heuristic_weight, the more emphasis on min time and the less emphasis on min control effort, recommended value: 50 for 2-D, 300 for 3-D
  vertical_semi_fov: 0.61 # vertical semi field of view (in rad), used for 3D planning only, value should lie in (0, pi/2), if 2D planning set it as 0
  
  optimization/bb_xy_size: 5.0 # xy half size of the intial polytope of flight corridor
  optimization/bb_z_up: 2.0 # z up size of the intial polytope of flight corridor
  optimization/bb_z_down: 1.5 # z down size of the intial polytope of flight corridor
  optimization/w_time: 50.0 # penalty weight to minimize the total time (4~20)
  optimization/w_vel: 360.0 # penalty weight to minimize the the violate velocity (100 ~ 1000)
  optimization/w_acc: 360.0 # penalty weight to minimize the the violate accelrate (100 ~ 1000)
  optimization/w_sta_obs: 20.0 # penalty weight to enforce the position inside flight corridor (100 ~ 1000)
  
  search/max_tau: 0.6 # time interval for kinodynamic search
  search/init_max_tau: 0.6 # time interval for kinodynamic search (usually don't change it)
  search/horizon: 13.0 # local search horizon
  search/lambda_heu: 5.0 # heu weight
  search/allocate_num: 100000 # total allocate space to store nodes
  search/resolution_astar: 0.3 # tolerance for a star search
  search/vis_check_num: 15 # number of checking point along each segement
  search/w_time: 50.0 # time weight
  search/use_jerk: false # set false now
  search/time_res: 0.05 # time resolution to index the path
  # gcopter parameters
  MaxVelMag: 3.0
  MaxBdrMag: 2.1
  MinThrust: 2.0
  MaxThrust: 12.0
  DilateRadius: 0.05
  TimeoutRRT: 0.2
  MaxTiltAngle: 1.05
  HorizDrag: 0.70
  VertDrag: 0.80
  ParasDrag: 0.01
  SpeedEps:  0.0001
  WeightT: 20.0
  ChiVec:  [1.0e+4, 1.0e+4, 1.0e+4, 1.0e+4, 1.0e+5]
  SmoothingEps: 1.0e-2
  IntegralIntervs: 32
  RelCostTol: 1.0e-5

stopping_policy:
  acc_xy_des: 4.0 # stopping policy x-y maximum acceleration
  jerk_xy_des: 2.0 # stopping policy x-y maximum jerk
  acc_z_des: 2.0 # stopping policy z maximum acceleration
  jerk_z_des: 1.0 # stopping policy z maximum jerk
  acc_yaw_des: 0.05 # stopping policy yaw maximum angular acceleration in rad/(s^2)

local_global_server:
  # local planning horizon will be from robot to the local voxel map boundary
  waypoint_reach_xy_threshold: 5.0 # x-y distance threshold, within which intermidiate waypoint is regarded as reached
  final_goal_reach_xy_threshold: 5.0 # within which final waypoint is regarded as reached, this should be smaller than waypoint_reach_threshold
  close_to_final_dist: 5.0 # distance-to-goal threshold, should be larger than final_goal_reach_xy_threshold, within which the velocity and acceleration checking will be turned on, -1 means no velocity checking at all
  local_plan_timeout_duration: 0.5 # local planner timeout in seconds
  max_local_plan_trials: 1 # should be set as 1 since state machine is now able to try multiple times after planner failures
  max_horizon: 10 # defulat 5, should be larger than local_plan_timeout_duration*max_local_plan_trials*local_replan_rate
  global_planner_verbose: false # verbose mode, default false
  odom_frame: "quadrotor/odom" # odometry reference frame
  map_frame: "quadrotor/map" # SLAM reference frame (only for using two-reference-frame system, otherwise this should be set to be the same as odom_frame)

state_machine:
  local_replan_rate: 2.0 # local replan frequency, calling local planner every (1/local_replan_rate) seconds, (float 32)
  global_replan_rate_factor: 3 # global_replan_rate_factor = local replan frequency / global replan frequency, should be an integer and >= 1, (int)
  max_replan_trials: 100 # max allowed trials to re-enter replanner

